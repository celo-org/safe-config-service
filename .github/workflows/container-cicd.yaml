---
name: 'Run Container Workflow'
on:
  workflow_call:
    inputs:
      service-account:
        required: true
        type: string
      service-account-dev:
        required: true
        type: string
      app-name:
        required: true
        type: string
      tag:
        required: true
        type: string
      tag-dev:
        required: true
        type: string
      context:
        required: true
        type: string


env:
  SERVICE_ACCOUNT: ${{ inputs.service-account }}
  SERVICE_ACCOUNT_DEV: ${{ inputs.service-account-dev }}
  APP_NAME: ${{ inputs.app-name }}
  TAG: ${{ inputs.tag }}
  TAG_DEV: ${{ inputs.tag-dev }}
  CONTEXT: ${{ inputs.context }}

jobs:
  Container-workflow:
    runs-on: ubuntu-latest
    permissions: # Must change the job token permissions to use JWT auth
      contents: read
      id-token: write

    steps:
      - name: 'Checkout'
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b

      # Pulls Environment variables from repo_common.env for easy configuration across all workflows
      - uses: cardinalby/export-env-action@0e5a72e485827a0c9ce6570c12840da1f93302f9
        with:
          envFile: ./.github/workflows/repo_common.env 
          expand: 'true'

      - id: auth
        name: 'Authenticate to Google Cloud'
        if: github.ref != 'refs/heads/main'
        uses: 'google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_DEV }}
          access_token_lifetime: '20m'

      - id: auth-main
        name: 'Authenticate to Google Cloud'
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_ID_PROVIDER_MAIN }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          access_token_lifetime: '20m'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb'

      - name: 'Configure docker for gcloud auth'
        run: 'gcloud auth configure-docker ${{ env.ARTIFACT_LOCATION }}'


      - id: docker-build-push
        name: Build Docker image and push to Google Artifact Registry
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          platforms: linux/amd64
          push: true
          context: ${{ env.CONTEXT }}
          tags: |
             ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO_DEV }}/${{ env.APP_NAME }}:${{ env.TAG_DEV }}
             ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO_DEV }}/${{ env.APP_NAME }}:${{ github.sha }}


      - id: docker-build-push-main
        name: Build Docker image and push to Google Artifact Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          platforms: linux/amd64
          push: true
          context: ${{ env.CONTEXT }}
          tags: |
             ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}/${{ env.APP_NAME }}:${{ env.TAG }}
             ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}/${{ env.APP_NAME }}:${{ github.sha }}

      - uses: sigstore/cosign-installer@main
      - name: Sign container image
        if: github.ref != 'refs/heads/main'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO_DEV }}/${{ env.APP_NAME }}@${{ steps.docker-build-push.outputs.digest }}

      - uses: sigstore/cosign-installer@main
      - name: Sign container image main
        if: github.ref == 'refs/heads/main'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}/${{ env.APP_NAME }}@${{ steps.docker-build-push-main.outputs.digest }}



#      Not available for private repos currently
#
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: "${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}/${{ env.APP_NAME }}:${{ github.sha}}"
#          vuln-type: "os,library"
#          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
#          format: "sarif"
#          output: "trivy-results.sarif"
#
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v2
#        if: always()
#        with:
#          sarif_file: "trivy-results.sarif"#
