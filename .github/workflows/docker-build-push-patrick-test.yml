name: Build and Push Docker image (Patrick Testing)

on:
  workflow_dispatch:

  push:
    branches:
      - 'feat/celo'
env:
  VISIBILITY: public   #public or private
#  REGISTRY: us-west1-docker.pkg.dev/devopsre/clabs-public-images
  REGISTRY: us-west1-docker.pkg.dev/devopsre/clabs-${{ env. VISIBILITY }}-images
  CONTAINER: safe-config-service-test-patrick
  TAG: patrick-test
  SERVICE_ACCOUNT: safe-config-service-images@devopsre.iam.gserviceaccount.com
  REPO: safe-config-service

jobs:
  Build-Push-Docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      security-events: write
        
    steps:
      - name: 'Checkout'
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955'
        with:
          workload_identity_provider: 'projects/1094498259535/locations/global/workloadIdentityPools/gh-${{ env.REPO }}/providers/github-by-repos'
          service_account: ${{ env.SERVICE_ACCOUNT }}
          access_token_lifetime: '50m'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb'

      - name: 'Configure docker for gcloud auth'
        run: 'gcloud auth configure-docker us-west1-docker.pkg.dev'

      - id: docker-build-push
        name: Build Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          platforms: linux/amd64
          push: true
          context: .
          tags: |
             ${{ env.REGISTRY }}/${{ env.CONTAINER }}:${{ env.TAG}}
             ${{ env.REGISTRY }}/${{ env.CONTAINER }}:${{ github.sha }}

      - uses: sigstore/cosign-installer@main

      - name: Sign container image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.CONTAINER }}@${{ steps.docker-build-push.outputs.digest }}


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.REGISTRY }}/${{ env.CONTAINER }}:${{ github.sha}}"

          vuln-type: "os,library"
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

